apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.productCatalogService.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.productCatalogService.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.productCatalogService.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.productCatalogService.name }}
    spec:
      {{- if .Values.serviceAccounts.create }}
      serviceAccountName: {{ .Values.productCatalogService.name }}
      {{- else }}
      serviceAccountName: default
      {{- end }}
      terminationGracePeriodSeconds: 5
      {{- if .Values.securityContext.enable }}
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        {{- if .Values.seccompProfile.enable }}
        seccompProfile:
          type: {{ .Values.seccompProfile.type }}
        {{- end }}
      {{- end }}
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: {{ .Values.images.repository }}/{{ .Values.productCatalogService.name }}:{{ .Values.images.tag | default .Chart.AppVersion }}
        ports:
        - containerPort: 3550
        env:
        - name: PORT
          value: "3550"
        - name: EXTRA_LATENCY
          value: {{ .Values.productCatalogService.extraLatency }}
        readinessProbe:
          grpc:
            port: 3550
        livenessProbe:
          grpc:
            port: 3550
        resources:
          {{- toYaml .Values.productCatalogService.resources | nindent 10 }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.productCatalogService.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.productCatalogService.name }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Values.productCatalogService.name }}
  ports:
  - name: grpc
    port: 3550
    targetPort: 3550
---
{{- if .Values.networkPolicies.create }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Values.productCatalogService.name }}
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app: {{ .Values.productCatalogService.name }}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: {{ .Values.frontend.name }}
    - podSelector:
        matchLabels:
          app: {{ .Values.checkoutService.name }}
    - podSelector:
        matchLabels:
          app: {{ .Values.recommendationService.name }}
    ports:
     - port: 3550
       protocol: TCP
  egress:
  - {}
{{- end }}
---
{{- if .Values.productCatalogService.create }}
{{- if .Values.serviceAccounts.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.productCatalogService.name }}
  namespace: {{.Release.Namespace}}
  {{- if not .Values.serviceAccounts.annotationsOnlyForCartservice }}
  {{- with .Values.serviceAccounts.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}